snippet yy "Yiddish Article" b
%        File: `!v @%`
%     Created: `date`
% Last Change: Thu Sep 19 04:00 PM 2013 P
%
`!v FoldLetter(0)`
\\documentclass[12pt]\{article}
\\usepackage\{setspace}\\doublespacing
\\usepackage\{fontspec}
\\usepackage\{polyglossia}

\\setdefaultlanguage\{${1:yiddish}} \\setotherlanguage\{${1/(hebrew)|(english)|..*/(?1:english)(?2:hebrew)/}}
\newfontfamily\\hebrewfont\{Helvetica World}
\\newfontfamily\\englishfont\{Helvetica World}
\\title\{

%${2:`date +%d`.`date +%m`.`date +%Y`}
\\date\{`!p snip.rv = dateout(dp(t[1])[0],dp(t[1])[1],dp(t[1])[2],True,"nom")`}
\\author\{\\textenglish\{James Waddington}}
endsnippet
snippet al "align" 
\\begin\{align}
	#1
\\end\{align}
endsnippet
snippet cond
	${1:hebrew(hebrew/english)}
	${1/(hebrew)|(english)|..*/(?1:english)(?2:hebrew)/}
endsnippet
global !p
# -*- encoding=utf-8 -*-
from re import match
from re import sub
def dateout(day, month, yor, boolweek, kasus):
	import datetime
	from datetime import MINYEAR
	from datetime import MAXYEAR
	weekday  = datetime.date(int(yor), int(month), int(day)).weekday()
	if int(day)<20: tog = str(day)+"ט"
	else: tog = str(day)+"סט"
	if snip.opt("g:precomposed", True):	
		khadoshim = ["יאַנואַר", "פֿעברואַר", "מאַרץ", "אַפּריל", "מײַ", "יוני", "יולי", "אױגוסט", "סעפּטעמבער", "אָקטאָבער", "נאָװעמבער", "דעצעמבער"]
		vokhntogn = ["מאָנטיק", "דינסטיק", "מיטװאָך", "דאָנערשטיק", "פֿרײַטיק", "שבת", "זונטיק"]
	else:
		khadoshim = ["יאַנואַר", "פֿעברואַר", "מאַרץ", "אַפּריל", "מײַ", "יוני", "יולי", "אױגוסט", "סעפּטעמבער", "אָקטאָבער", "נאָװעמבער", "דעצעמבער"]
		vokhntogn = ["מאָנטיק", "דינסטיק", "מיטװאָך", "דאָנערשטיק", "פֿרײַטיק", "שבת", "זונטיק"]
	khoydesh  = khadoshim[int(month)-1]
	vokhntog  = vokhntogn[weekday]
	tsayt = ""
	if boolweek:
		tsayt += vokhntog + ", "
	if kasus == "nom":
		tsayt += "דער " + tog + "ער " + khoydesh + " " + str(yor)  
	elif kasus == "akk":
		tsayt += "דעם " + tog + "ן " + khoydesh + " " + str(yor)  
	return tsayt
def dp(date):
	date=sub("\s","",date)
	if sub("\D", "",sub("\.", "0", date))!=sub("\.", "0", date):
		return "10.10.10".split(".")
	if len(date.split("."))!=3:
		return "9.9.9".split(".")
	if  date.split(".")[2] == "":
		return '11.11.11'.split(".")
	day   = int(date.split(".")[0])
	month = int(date.split(".")[1])
	year  = int(date.split(".")[2])
	if year > 9999 or year < 1  or month < 1 or month > 12 or day < 1:
		return "1.2.3".split(".")
	if month in [1,3,5,7,8,10,12] and day > 31:
			return "2,3,4".split(".")
	elif month == 2:
		if day > 29:
			return "3.2.3".split(".")
		elif day == 29 and year%4 == 0 and year%400 != 0:
			return "4.2.3".split('.')
	elif month in [4,6,9,11] and day > 30:
		return "5.2.3".split('.')
	return date.split('.')
endglobal
snippet ydate "yiddish date" 
%${1:`date +%d`.`date +%m`.`date +%Y`}
\\date\{`!p snip.rv = dateout(dp(t[1])[0],dp(t[1])[1],dp(t[1])[2],True,"akk")`}
#TODO get rid of the replace abomination
endsnippet


